"Prueba de hipotesis de dos colas",quote=FALSE,
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ", lado_izq,
"Lado derecho = ", lado_der,
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO",
sep = "\n")
runApp('D:/Santiago/2017/Cua/Investigacion/Proyectos Aplicativos Web Shiny Estadistica/Ej Ecuaciones bonitas en shiny')
runApp('C:/Users/USUARIO/phvarianza')
paste("Varianza muestral = ","\n",
"Estadistico de prueba = ",
"Nivel de significancia = ",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ",
"Lado derecho = ",
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO",
sep = "\n")
paste("Varianza muestral = ","\n",
"Estadistico de prueba = ",
"Nivel de significancia = ",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ",
"Lado derecho = ",
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO")
a <- paste("Varianza muestral = ","\n",
"Estadistico de prueba = ",
"Nivel de significancia = ",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ",
"Lado derecho = ",
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO")
strsplit()
strsplit(a,"\n")[[1]]
runApp('C:/Users/USUARIO/phvarianza')
runApp('C:/Users/USUARIO/phvarianza')
paste("Varianza muestral = ","\n",
"Estadistico de prueba = ",
"Nivel de significancia = ",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ",
"Lado derecho = ",
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO")
strsplit(a,"\n")[[1]]
runApp('C:/Users/USUARIO/phvarianza')
shiny::runGitHub(repo="phvarianza", user="shlondon")
q()
shiny::runApp('C:/Users/USUARIO/phvarianza')
shiny::runGitHub(repo="phvarianza", user="shlondon")
shiny::runGitHub(repo="phvarianza", user="shlondon")
nivel_significancia <- 0.95
grados_de_libertad <- 99
qchisq((1-nivel_significancia)/2, grados_de_libertad)
qchisq(nivel_significancia + (1-nivel_significancia)/2, grados_de_libertad)
shiny::runGitHub(repo="phvarianza", user="shlondon")
shiny::runGitHub(repo="phvarianza", user="shlondon")
q()
1/6
shiny::runGitHub(repo="semilleroApps", user="fhernanb", sub="phmedia")
shiny::runGitHub(repo="semilleroApps", user="fhernanb", sub="phmedia")
shiny::runGitHub(repo="Emprendimiento-y-Genero", user="shlondon")
exp(0.29)
0.5/0.5
0.7/0.3
0.6/0.4
exp(0.7)
-log(0)
-log(0.001)
-log(0.01)
-log(0.1)
-log(0.5)
x=seq(0,1,0.001)
y=-log(x)
plot(x,y)
y1=-log(1-x)
plot(x,y)
x=seq(0,2,0.001)
plot(x,y)
y=-log(x)
plot(x,y)
abline(h=0)
x=seq(0,2,0.001)
y=-log(1-x)
x=seq(0,1,0.001)
y=-log(1-x)
plot(x,y)
q()
0.1*2
0.1*0.5
0.3*0.99
0.5*0.99
0.9*0.99
1*0.99
2*0.99
q()
chebyshev <- function(k){
1 - (1/(k^29))
}
x <- c(1,2,3)
chebyshev(zx)
chebyshev(zx)
chebyshev(x)
chebyshev(1)
chebyshev <- function(k){
1 - (1/(k^2))
}
x <- c(1,2,3)
chebyshev(1)
chebyshev(2)
chebyshev(3)
x <- c(1,2,3,4)
chebyshev(x)
x <- c(1,2,3,4,5)
chebyshev(x)
0.15/0.1
8*16.5
0.05/0.1
0.9/0.1
0.9/0.01
hk <- function(ls,mu,s){
p1 <- ls - mu
p2 <- p1 - s
p3 <- p2/s
p4 <- 1 + p3
}
ls = 14.15
mu = 14
s = 0.1
hk(ls,mu,s)
k <- hk(ls,mu,s)
k
ls = 15
mu = 14
s = 0.1
k <- hk(ls,mu,s)
k
ls = 18
mu = 14
s = 2
k <- hk(ls,mu,s)
k
ls = 18.9
mu = 14
s = 2
k <- hk(ls,mu,s)
k
q()
0.35*0.23
13*4
52/2
26/52
3*4
12/56
(12/56)+0.5
(12/56)*0.5
6/52
0.03*0.03
1/6
12/52
0.25*0.26
15327/157026
44837+157026-15327
(44837+157026-15327)/428638
0.3*0.21
0.3*0.7
1-0.21
0.1/0.7
0.18/0.2
0.11/0.33
0.06/0.34
162/248
181/252
(252+5)/500
0.86*0.8 / ((0.86*0.8) + (0.65*0.2))
(0.997*0.259)/( (0.997*0.259) + ((1-0.926)*(1-0.259)))
(0.98*0.02)/( (0.98*0.02) + ( (1-0.74)*(1-0.02) ) )
q(})
q()
(50*50)^2
((50*50)^2)/2
((100*100)^2)/2
((100*100)^2)
q()
set.seed(1)
x = c(1:24)
g1 <- sample(x,12)
g1
g2 <-
x(-g1)
g2 <-
x[-g1]
g2 <-
x[-g1]
x[-g1]
ordered(g1)
g1[ordered(g1)]
g1
g1
g1
g1[ordered(g1)]
g1[-ordered(g1)]
g1[ordered(-g1)]
order(g1)
g1[order(g1)]
g1
g1[order(g1)]
g2 <- x[-g1]
g2
set.seed(1)
x = c(1:24)
g1 <- sample(x,12)
g1
g1[order(g1)]
g2 <- x[-g1]
g2
g1
g1[order(g1)]
g1
g2
g1[order(g1)]
g2
set.seed(1)
x = c(1:24)
g1 <- sample(x,12)
g1 <- g1[order(g1)]
g2 <- x[-g1]
g1
g2
set.seed(1)
x = c(1:36)
g1 <- sample(x,length(x)/2)
g1 <- g1[order(g1)]
g2 <- x[-g1]
g1
g2
0.6*1.5
0.6*-1.5
0.6*3.7
5.1*0.8
2.3*0.8
1.6-0.8
.9+4.08
2.2-1.84
0.8*5.1
0.8*2.3
0.6*1.5
0.6*3.7
4.08+0.9
2.22-1.84
0.8*3.7
0.6*3.7
2.22-1.84
q()
(4.5+3+10.2)/2
w <- c(270,300,100)
x <- c(5,6.5,8)
x*W
x*
w
sum(x*w)
sum(x*w)/sum(w)
2010-1989
(6286800/5164900)^(1/21)
(6286800/5164900)^(1/21) -1
((6286800/5164900)^(1/21) -1)*100
0.0002*1000
x <- c(15, 8, 6, 9, 9, 4, 18, 10, 10, 12, 12, 4, 7, 8, 12, 10, 10, 11, 9, 13, 5, 6, 11, 14, 5, 6, 6, 5, 13, 5)
xb <- mean(x)
xb
x-xb
(x-xb)^2
sum((x-xb)^2)
sum((x-xb)^2)/30
sum((x-xb)^2)/29
max(x)-min(x)
median(x)
sqrt(sum((x-xb)^2)/29)
100/40
1 - (1/(1^2.5))
1 - (1/(2.5^2))
5/6
0.83*6
5-0.83*6
0.83*5
0.83*5 + 0.85
set.seed(1)
rtaVersionA <- sample(c(a,b,c,d),12)
rtaVersionA <- sample(c("a","b","c","d"),12)
rtaVersionA <- sample(c("a","b","c","d"),12,replace = TRUE)
rtaVersionA
set.seed(1)
rtaVersionA <- sample(c("a","b","c","d"),12,replace = TRUE)
rtaVersionA
set.seed(2)
rtaVersionB <- sample(c("a","b","c","d"),12,replace = TRUE)
rtaVersionB
rtaVersionA
set.seed(1)
rtaVersionA <- sample(c("a","b","c","d"),12,replace = TRUE)
rtaVersionA
sum(w*x)
x <- c(5,6.5,8)
sum(w*x)
sum(w)
sum(x)
x <- c(15, 8, 6, 9, 9, 4, 18, 10, 10, 12, 12, 4, 7, 8, 12, 10, 10, 11, 9, 13, 5, 6, 11, 14, 5, 6, 6, 5, 13, 5)
sum(x)
mean(x)
length(x)
x[order(x)]
xo <- x[order(x)]
(xo[15]+xo[16])/2
19/
2
sum(x-mean)
sqrt(sum((x-mean(x))^2)/29)
sqrt(sum((x-mean(x))^2)/30)
1 - 1/(2.5^2)
1 - 1/(2^2)
1 - 1/(1.5^2)
1 - 1/(3^2)
set.seed(2)
rtaVersionB <- sample(c("a","b","c","d"),12,replace = TRUE)
rtaVersionB
rtaVersionA
0.9608*0.8589
1-0.8589
844/5980
0.9608*0.1411
0.9608/0.1411
0.1411/0.9608
0.9608*0.1411
844/6224
0.9608
0.9608*0.8252
1-0.9745
3.92*2.55
0.0392*(1-0.0255)
0.0392*(0.0255)
1/6
0.83*7
0.83*6
zurda <- 0.09
der <- 1 - zurda
der*der
der^5
fem <- 0.508
mas <- 1 - fem
fem*der
cor <- 13/52
as <- 4/52
coryas <- 1/52
1/52
coryas
as*cor
6/244
(6/6224)/(244/6224)
96.08*(100-14.11)
(96.08/100)*(100/100-(14.11/100))
zurda*zurda
zurda^5
mas*der
238/244
96.08*(100-82.52)
844/6224
5136/6224
5136/5980
96.08*(100-85.89)
q()
shiny::runGitHub(repo="phvarianza", user="shlondon")
q()
shiny::runGitHub(repo="phvarianza", user="shlondon")
shiny::runGitHub(repo="phvarianza", user="shlondon")
runApp('C:/Users/USUARIO/phvarianza')
runApp('C:/Users/USUARIO/phdifvarianza')
runApp('C:/Users/USUARIO/phdifvarianza')
runApp('C:/Users/USUARIO/phdifvarianza')
runApp('C:/Users/USUARIO/phdifvarianza')
?var.test
setwd("C:/Users/USUARIO/phdifvarianza")
list.files()
bd <- read.csv("unequal_var_data.txt")
head(bd)
bd <- read.csv("unequal_var_data.txt",sep = "\t", header = T)
head(bd)
runApp('C:/Users/USUARIO/phdifvarianza')
runApp('C:/Users/USUARIO/phdifvarianza')
ph_igual_varianzas <- function(var_cuant, var_cual, nivel_de_significancia,tipo_de_prueba){
grados_de_libertad_num <- tapply(var_cuant, var_cual, length)[1]-1
grados_de_libertad_den <- tapply(var_cuant, var_cual, length)[2]-1
nivel_de_significancia <- 1 - nivel_de_significancia
if(tipo_de_prueba == "two.sided"){
#Lado izquierdo y lado de recho donde inician las zonas de rechazo de la hipotesis nula
lado_der <- qf(1-(nivel_de_significancia/2), grados_de_libertad_num, grados_de_libertad_den)
lado_izq <- qf(nivel_de_significancia/2, grados_de_libertad_num, grados_de_libertad_den)
#Estadistico de prueba
ep <- tapply(var_cuant, var_cual, var)[1]/tapply(var_cuant, var_cual, var)[2]
#Data frame que se imprime en el aplicativo
bd <- data.frame(Resultados=c("Estadistico de prueba (EP)",
"Nivel de significancia",
"Regiones criticas de rechazo de hipotesis nula",
"Conclusion")
,
Valores=c(as.character(round(ep,8)),
as.character(nivel_de_significancia),
paste("EP <= ",as.character(round(lado_izq,4)),
"o",
"EP >= ", as.character(round(lado_der,4)),
sep = "  "),
if(ep <= lado_izq |
ep >= lado_der){
paste("El estadistico de prueba es igual a", round(ep,8),
". Como el estadistico de prueba se encuentra
dentro de la region critica de rechazo entonces se rechaza
la hipotesis nula en favor de la hipotesis alternativa.")
}else{
paste("El estadistico de prueba es igual a", round(ep,8),
". Como el estadistico de prueba se encuentra fuera
de la region critica de rechazo entonces se concluye que
los datos no son suficientes para rechazar la hipotesis nula.")
}
))
bd
}else{
if(tipo_de_prueba == "less"){
#Lado izquierdo  donde inicia la zona de rechazo de la hipotesis nula
lado_izq <- qf(nivel_de_significancia, grados_de_libertad_num, grados_de_libertad_den)
#Estadistico de prueba
ep <- tapply(var_cuant, var_cual, var)[1]/tapply(var_cuant, var_cual, var)[2]
#Data frame que se imprime en el aplicativo
bd <- data.frame(Resultados=c("Estadistico de prueba (EP)",
"Nivel de significancia",
"Region critica de rechazo de hipotesis nula",
"Conclusion")
,
Valores=c(as.character(round(ep,8)),
as.character(nivel_de_significancia),
paste("EP <= ",as.character(round(lado_izq,4))),
if(ep <= lado_izq){
paste("El estadistico de prueba es igual a", round(ep,8),
". Como el estadistico de prueba se encuentra
dentro de la region critica de rechazo entonces se rechaza
la hipotesis nula en favor de la hipotesis alternativa.")
}else{
paste("El estadistico de prueba es igual a", round(ep,8),
". Como el estadistico de prueba se encuentra fuera
de la region critica de rechazo entonces se concluye que
los datos no son suficientes para rechazar la hipotesis nula.")
}
))
bd
}else{
if(tipo_de_prueba == "greater"){
#Lado derecho donde inician las zonas de rechazo de la hipotesis nula
lado_der <- qf(1-nivel_de_significancia, grados_de_libertad_num, grados_de_libertad_den)
#Estadistico de prueba
ep <- tapply(var_cuant, var_cual, var)[1]/tapply(var_cuant, var_cual, var)[2]
#Data frame que se imprime en el aplicativo
bd <- data.frame(Resultados=c("Estadistico de prueba (EP)",
"Nivel de significancia",
"Region critica de rechazo de hipotesis nula",
"Conclusion")
,
Valores=c(as.character(round(ep,8)),
as.character(nivel_de_significancia),
paste("EP >= ", as.character(round(lado_der,4)),
sep = "  "),
if(ep >= lado_der){
paste("El estadistico de prueba es igual a", round(ep,8),
". Como el estadistico de prueba se encuentra
dentro de la region critica de rechazo entonces se rechaza
la hipotesis nula en favor de la hipotesis alternativa.")
}else{
paste("El estadistico de prueba es igual a", round(ep,8),
". Como el estadistico de prueba se encuentra fuera
de la region critica de rechazo entonces se concluye que
los datos no son suficientes para rechazar la hipotesis nula.")
}
))
bd
}
}
}
}
d <- ph_igual_varianzas(bd$Weight,bd$Group,0.95,"two.sided")
View(d)
var.test(bd$Weight ~ bd$Group)
var.test(bd$Weight ~ bd$Group, ratio = 2)
var.test(bd$Weight ~ bd$Group, ratio = 1)
var.test(bd$Weight ~ bd$Group, ratio = 0.5)
var.test(bd$Weight ~ bd$Group, ratio = 0.5, alternative = "less")
var.test(bd$Weight ~ bd$Group, ratio = 2, alternative = "less")
var.test(bd$Weight ~ bd$Group, ratio = 10, alternative = "less")
?var.test()
?Var.test()
library(devtools)
?Var.test()
library(devtools)
require(devtools)
search()
duration <- c(1470, 1510, 1690, 1740, 1900, 2000, 2030,
2010, 2190, 2200, 2290, 2380, 2390, 2480,
2500, 2580, 2700)
Var.test(x=duration, conf.level=0.95)
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/usefultools', force=TRUE)
library(devtools)
library(devtools)
runApp('C:/Users/USUARIO/phvarianza')
q()
